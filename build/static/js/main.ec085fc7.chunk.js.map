{"version":3,"sources":["services/api.ts","hooks/useTransactions.tsx","assets/income.svg","assets/outcome.svg","assets/total.svg","components/Summary/styles.ts","components/Summary/index.tsx","components/TransactionsTable/styles.ts","components/TransactionsTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","assets/logo.svg","components/Header/styles.ts","components/Header/index.tsx","assets/close.svg","components/NewTransactionModal/styles.ts","components/NewTransactionModal/index.tsx","styles/globals.ts","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","TransactionsContext","createContext","TransactionsProvider","children","useState","transactions","setTransactions","transactionInput","a","post","createdAt","Date","response","transaction","data","useEffect","get","then","Provider","value","createTransaction","useTransactions","useContext","Container","styled","div","Summary","summary","reduce","acc","type","deposits","amount","total","withdraws","src","incomeImg","alt","Intl","NumberFormat","style","currency","format","outcomeImg","className","totalImg","TransactionsTable","map","title","category","DateTimeFormat","id","main","Dashboard","header","Content","Header","onOpenNewTransactionModal","logoImg","onClick","form","TransactionTypeContainer","colors","green","red","RadioBox","button","props","isActive","transparentize","activeColor","darken","NewTransactionModal","isOpen","onRequestClose","setTitle","setAmount","setCategory","setType","event","preventDefault","overlayClassName","closeImg","onSubmit","placeholder","onChange","target","Number","GlobalStyle","createGlobalStyle","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","Modal","setAppElement","createServer","models","Model","seeds","server","db","loadData","routes","this","namespace","schema","all","request","JSON","parse","requestBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec085fc7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\t\r\nexport const api = axios.create({\r\n    baseURL: 'http://localhost:3000/api'\r\n});\r\n","import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { api } from \"../services/api\";\r\n\r\ninterface Transaction {\r\n  id: number;\r\n  title: string;\r\n  amount: number;\r\n  type: string;\r\n  category: string;\r\n  createdAt: string;\r\n}\r\n\r\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>;\r\ninterface TransactionProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface TransactionsContextData {\r\n  transactions: Transaction[];\r\n  createTransaction: (transaction: TransactionInput) => Promise<void>;\r\n}\r\n\r\nconst TransactionsContext = createContext<TransactionsContextData>(\r\n  {} as TransactionsContextData\r\n);\r\n\r\nexport function TransactionsProvider({ children }: TransactionProviderProps) {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.get<any>('transactions')\r\n      .then(response => setTransactions(response.data.transactions))\r\n  }, []);\r\n\r\n  async function createTransaction(transactionInput: TransactionInput) {\r\n    const response = await api.post<any>('/transactions', {\r\n      ...transactionInput,\r\n      createdAt: new Date(),\r\n    });\r\n    const { transaction } = response.data;\r\n\r\n    setTransactions([\r\n      ...transactions,\r\n      transaction,\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <TransactionsContext.Provider value={{ transactions, createTransaction }}>\r\n      {children}\r\n    </TransactionsContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTransactions() {\r\n  const context = useContext(TransactionsContext);\r\n\r\n  return context;\r\n}","export default __webpack_public_path__ + \"static/media/income.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/outcome.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.e90c2d1e.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display:grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 2rem;\r\n    margin-top: -10rem;\r\n\r\n    div{\r\n        background: var(--shape);\r\n        padding: 1.5rem 2rem;\r\n        border-radius: 0.25rem;\r\n        color: var(--text-title);\r\n        header{\r\n            display:flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        strong{\r\n            display:block;\r\n            margin-top: 1rem;\r\n            font-size: 2rem;\r\n            font-weight: 500;\r\n            line-height: 3rem;\r\n        }\r\n    \r\n        &.hightlight-background{\r\n            background: var(--green);\r\n            color: #FFF;\t\r\n}\r\n    }\r\n    \r\n`;\r\n","import { useTransactions } from \"../../hooks/useTransactions\";\r\n\r\nimport incomeImg from \"../../assets/income.svg\";\r\nimport outcomeImg from \"../../assets/outcome.svg\";\r\nimport totalImg from \"../../assets/total.svg\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport function Summary() {\r\n  const { transactions } = useTransactions();\r\n\r\n  const summary = transactions.reduce((acc, transaction) => {\r\n    if (transaction.type === 'deposit') {\r\n      acc.deposits += transaction.amount;\r\n      acc.total += transaction.amount;\r\n    } else {\r\n      acc.withdraws += transaction.amount;\r\n      acc.total -= transaction.amount;\r\n    }\r\n\r\n    return acc;\r\n  }, {\r\n    deposits: 0,\r\n    withdraws: 0,\r\n    total: 0,\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <header>\r\n          <p>Entradas</p>\r\n          <img src={incomeImg} alt=\"Entradas\"/>\r\n        </header>\r\n        <strong>\r\n          {new Intl.NumberFormat('pt-BR', {\r\n            style: 'currency',\r\n            currency: 'BRL'\r\n          }).format(summary.deposits)}\r\n        </strong>\r\n      </div>\r\n      <div>\r\n        <header>\r\n          <p>Saídas</p>\r\n          <img src={outcomeImg} alt=\"Saídas\"/>\r\n        </header>\r\n        <strong>\r\n          -\r\n          {new Intl.NumberFormat('pt-BR', {\r\n            style: 'currency',\r\n            currency: 'BRL'\r\n          }).format(summary.withdraws)}\r\n        </strong>\r\n      </div>\r\n      <div className=\"highlight-background\">\r\n        <header>\r\n          <p>Total</p>\r\n          <img src={totalImg} alt=\"Total\"/>\r\n        </header>\r\n        <strong>\r\n          {new Intl.NumberFormat('pt-BR', {\r\n            style: 'currency',\r\n            currency: 'BRL'\r\n          }).format(summary.total)}\r\n        </strong>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    margin-top: 4rem;\r\n\r\n    table{\r\n        width: 100%;\r\n        border-spacing: 0 0.5rem;\r\n\r\n        th{\r\n            color: var(--text-body);\r\n            font-weight: 400;\r\n            padding: 1rem 2rem;\r\n            text-align: left;\r\n            line-height: 1.5rem;\r\n        }\r\n\r\n        td{\r\n            padding: 1rem 2rem;\r\n            border:0;\r\n            background: var(--shape);\r\n            color: var(--text-body);\r\n            border-radius: 0.25rem;\r\n\r\n            &:first-child{\r\n                color: var(--text-title);\r\n            }\r\n\r\n            &.deposit{\r\n                color: var(--green);\r\n            }\r\n\r\n            &.withdraw{\r\n                color: var(--red);\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { useTransactions } from \"../../hooks/useTransactions\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport function TransactionsTable() {\r\n  const { transactions } = useTransactions();\r\n\r\n  return (\r\n    <Container>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Título</th>\r\n            <th>Valor</th>\r\n            <th>Castegoria</th>\r\n            <th>Data</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {transactions.map(transaction => (\r\n            <tr key={transaction.id}>\r\n              <td>{transaction.title}</td>\r\n              <td className={transaction.type}>\r\n                {new Intl.NumberFormat('pt-BR', {\r\n                  style: 'currency',\r\n                  currency: 'BRL'\r\n                }).format(transaction.amount)}\r\n              </td>\r\n              <td>{transaction.category}</td>\r\n              <td>\r\n                {new Intl.DateTimeFormat('pt-BR').format(\r\n                  new Date(transaction.createdAt)\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Container>\r\n  );\r\n}","import styled from \"styled-components\";\r\n\t\r\nexport const Container = styled.main`\r\n    max-width: 1120px;\r\n    margin: 0 auto;\r\n    padding: 2.5rem 1rem;\r\n`;\r\n","import { Summary } from '../Summary';\r\nimport { TransactionsTable } from '../TransactionsTable';\r\nimport { Container } from './styles';\r\n\r\nexport function Dashboard(){\r\n    return (\r\n        <Container>\r\n            <Summary />\r\n            <TransactionsTable />\r\n        </Container>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import styled from 'styled-components';\r\n\r\nexport const Container = styled.header`\r\n    background: var(--blue);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    max-width: 1120px;\r\n    margin: 0 auto;\r\n\r\n    padding: 2rem 1rem 12rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    button{\r\n        font-size: 1rem;\r\n        color: #FFF;\r\n        background: var(--blue-light);\r\n        border: 0;\r\n        padding: 0 2rem;\r\n        border-radius: 0.25rem;\r\n        height: 3rem;\r\n\r\n        &:hover{\r\n            filter: brightness(0.9);\r\n            transition: filter 0.2s;\r\n        }\r\n    }\r\n`;\r\n","import logoImg from '../../assets/logo.svg';\r\nimport { Container, Content } from './styles';\r\n\r\ninterface HeaderProps{\r\n    onOpenNewTransactionModal: () => void;\r\n}\r\n\r\nexport function Header({onOpenNewTransactionModal}: HeaderProps){\r\n    return(<Container>\r\n        <Content>\r\n            <img src={logoImg} alt=\"dt money\" />\r\n            <button type=\"button\" onClick={onOpenNewTransactionModal}>\r\n                Nova transação\r\n            </button>\r\n        </Content>\r\n    </Container>);\r\n}","export default __webpack_public_path__ + \"static/media/close.f62862c6.svg\";","import styled from 'styled-components';\r\nimport { darken, transparentize } from 'polished';\r\n\r\nexport const Container = styled.form`\r\n    h2{\r\n\t\tcolor: var(--text-title);\r\n\t\tfont-size: 1.5rem;\r\n\t\tmargin-bottom: 2rem;\r\n\t}\r\n\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t\tpadding: 0 1.5rem;\r\n\t\theight: 4rem;\r\n\t\tborder-radius: 0.25rem;\r\n\t\t\r\n\t\tborder: 1px solid #D7D7D7;\r\n\t\tbackground: #E7E9EE;\r\n\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 1rem;\r\n\r\n\t\t&::placeholder{\r\n\t\t\tcolor: var(--text-body);\r\n\t\t}\r\n\r\n\t\t& + input {\r\n\t\t\tmargin-top: 1rem;\r\n\t\t}\r\n\t}\r\n\r\n    button[type=\"submit\"] {\r\n        width: 100%;\r\n        padding: 0 1.5rem;\r\n        height: 4rem;\r\n        background: var(--green);\r\n        color: #FFF;\r\n        border-radius: 0.25rem;\r\n        border: 0;\r\n        font-size: 1rem;\r\n        margin-top: 1.5rem;\r\n        font-weight: 600;\r\n        transition: filter 0.2s;\r\n\r\n        &:hover {\r\n            filter: brightness(0.9);\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const TransactionTypeContainer = styled.div`\r\n    margin: 1rem 0;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 0.5rem;\r\n`;\r\n\r\ninterface RadioBoxProps {\r\n    isActive: boolean;\r\n    activeColor: 'green' | 'red';\r\n}\r\n\r\nconst colors = {\r\n    green: '#33CC95',\r\n    red: '#E52E4D'\r\n};\r\n\r\nexport const RadioBox = styled.button<RadioBoxProps>`\r\n    height: 4rem;\r\n    border: 1px solid #D7D7D7;\r\n    border-radius: 0.25rem;\r\n    \r\n    background: ${(props) => props.isActive \r\n        ? transparentize(0.9, colors[props.activeColor] )\r\n        : 'transparent'\r\n    };\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: border-color 0.2s;\r\n\r\n    &:hover{\r\n        border-color: ${darken(0.1, '#D7D7D7')};\r\n    }\r\n\r\n    img {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\t\t\t\r\n\r\n    span {\r\n        display: inline-block;\r\n        margin-left: 1rem;\r\n        font-size: 1rem;\r\n        color: var(--text-title);\r\n    }\r\n`;\r\n\r\n","import { FormEvent, useState } from 'react';\r\nimport { useTransactions } from '../../hooks/useTransactions';\r\nimport Modal from 'react-modal';\r\n\r\nimport incomeImg from '../../assets/income.svg';\r\nimport outcomeImg from '../../assets/outcome.svg';\r\nimport closeImg from '../../assets/close.svg';\r\n\r\nimport { Container, RadioBox, TransactionTypeContainer } from './styles';\r\n\r\ninterface NewTransactionModalProps {\r\n  isOpen: boolean;\r\n  onRequestClose: () => void;\r\n}\r\n\r\nexport function NewTransactionModal({ isOpen, onRequestClose }: NewTransactionModalProps) {\r\n  const { createTransaction } = useTransactions();\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const [category, setCategory] = useState('');\r\n  const [type, setType] = useState('deposit');\r\n\r\n  async function handleCreateNewTransaction(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    await createTransaction({\r\n      title,\r\n      amount,\r\n      category,\r\n      type\r\n    });\r\n\r\n    setTitle('');\r\n    setAmount(0);\r\n    setCategory('');\r\n    setType('deposit');\r\n    onRequestClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onRequestClose}\r\n      overlayClassName=\"react-modal-overlay\"\r\n      className=\"react-modal-content\"\r\n    >\r\n      <button \r\n        type=\"button\"\r\n        onClick={onRequestClose}\r\n        className=\"react-modal-close\"\r\n      >\r\n        <img src={closeImg} alt=\"Fechar modal\"/>\r\n      </button>\r\n\r\n      <Container onSubmit={handleCreateNewTransaction}>\r\n        <h2>Cadastrar transação</h2>\r\n\r\n        <input\r\n          placeholder=\"Título\"\r\n          value={title}\r\n          onChange={event => setTitle(event.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Valor\"\r\n          value={amount}\r\n          onChange={event => setAmount(Number(event.target.value))}\r\n        />\r\n\r\n        <TransactionTypeContainer>\r\n          <RadioBox\r\n            type=\"button\"\r\n            onClick={() => setType('deposit')}\r\n            isActive={type === 'deposit'}\r\n            activeColor=\"green\"\r\n          >\r\n            <img src={incomeImg} alt=\"Entrada\"/>\r\n            <span>Entrada</span>\r\n          </RadioBox>\r\n\r\n          <RadioBox\r\n            type=\"button\"\r\n            onClick={() => setType('withdraw')}\r\n            isActive={type === 'withdraw'}\r\n            activeColor=\"red\"\r\n          >\r\n            <img src={outcomeImg} alt=\"Saída\"/>\r\n            <span>Saída</span>\r\n          </RadioBox>\r\n        </TransactionTypeContainer>\r\n\r\n        <input\r\n          placeholder=\"Categoria\"\r\n          value={category}\r\n          onChange={event => setCategory(event.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\">\r\n          Cadastrar\r\n        </button>\r\n      </Container>\r\n    </Modal>\r\n);\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root {\r\n        --background: #F8F2F5;\r\n        --red: #E52E4D;\r\n        --blue: #5429CC;\r\n        --green: #33CC95;\r\n\r\n        --blue-light: #6933FF;\r\n\r\n        --text-title: #363F5F;\r\n        --text-body: #969CB3;\r\n\r\n        --background: #F0F2F5;\r\n        --shape: #FFFFFF;\t\r\n    }\r\n\r\n    *{\r\n        margin:0;\r\n        padding:0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html{\r\n        @media (max-width: 1080px){\r\n            font-size: 93.75%; //15px\r\n        }\r\n\r\n        @media (max-width: 720px){\r\n            font-size: 87.5%; //14px\r\n        }\t\r\n    }\r\n\r\n    body{\r\n        background: var(--background);\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n    \r\n    body, input, textarea, button{\r\n        font-family: 'Poppins', sans-serif;\r\n        font-weight: 400;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, strong{\r\n        font-weight: 600;\r\n    }\r\n\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n\r\n    [disabled]{\r\n        opacity: 0.6;\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    .react-modal-overlay{\r\n\t\tbackground: rgba(0,0,0,0.5);\r\n\r\n\t\tposition: fixed;\r\n\t\ttop:0;\r\n\t\tbottom: 0;\r\n\t\tright: 0;\r\n\t\tleft: 0;\r\n\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.react-modal-content {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 576px;\r\n\t\tbackground: var(--background);\r\n\t\tpadding: 3rem;\r\n\t\tposition: relative;\r\n\t\tborder-radius: 0.24rem;\t\t\r\n\t}\r\n\r\n    .react-modal-close {\r\n\t\tposition: absolute;\r\n\t\tright: 1.5rem;\r\n\t\ttop: 1.5rem;\r\n\t\tborder: 0;\r\n\t\tbackground: transparent;\r\n\r\n\t\ttransition: filter 0.2s;\t\r\n\r\n\t\t&:hover {\r\n\t\t\tfilter: brightness(0.8);\r\n\t\t}\r\n\t}\r\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { NewTransactionModal } from './components/NewTransactionModal';\nimport { TransactionsProvider } from './hooks/useTransactions';\nimport { GlobalStyle } from \"./styles/globals\";\n\nModal.setAppElement('#root');\n\nexport function App() {\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n\n  return (\n    <TransactionsProvider>\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\n      \n      <Dashboard />\n      \n      <NewTransactionModal\n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handleCloseNewTransactionModal}\n      />\n\n      <GlobalStyle />\n    </TransactionsProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { createServer , Model} from 'miragejs';\n\ninterface Transaction {\n    id: number;\n    title: string;\n    amount: number;\n    type: string;\n    category: string;\n    createdAt: string;\n}\n\ncreateServer({\n  models: {\n    transaction: Model,\n  },\n  seeds(server) {\n    server.db.loadData({\n      transactions: [\n        {\n          id: 1,\n          title: 'Freelance de website',\n          type: 'deposit',\n          category: 'Dev',\n          amount: 6000,\n          createdAt: new Date('2021-02-12 09:00:00')\n        },\n        {\n          id: 2,\n          title: 'Aluguel',\n          type: 'withdraw',\n          category: 'Casa',\n          amount: 1100,\n          createdAt: new Date('2021-02-14 11:00:00')\n        }\n      ]\n    })\n  },\n  routes() {\n    this.namespace = 'api';\n\n    this.get('/transactions', () => {\n\t\t\treturn this.schema.all('transaction')\n\t\t});\n\n    this.post('/transactions', (schema, request) => {\n\t\t\tconst data = JSON.parse(request.requestBody);\n\n\t\t\treturn schema.create('transaction',data)\n\t\t});\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}